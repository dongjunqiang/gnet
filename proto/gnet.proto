package gnet.proto;

enum ERR_CODE
{
    SUCCESS = 0;
    BUSY = 1;
    ERROR = -1;

    ERR_NODE_ACK_FAIL = -100;
    ERR_NODE_CONNECT_FAIL = -101;
}

// tcp地址封装
message TCP
{
    required string host = 1;
    required int32 port = 2;
}

// shm地址封装, 只有同物理机器的节点之间才会自动分配shm
// 约定, a->b的shm, 由物理机器上的GW分配和回收
message SHM
{
    required string src = 1;
    required string dst = 2;
    required int32 shmid = 3;
    required uint32 size = 4;
}

// 服务节点
message NODE
{
    required string name = 1;
    optional TCP tcp = 2;
    repeated NODE children = 3;
    repeated SHM shms = 4;
}

// 路由表
message ROUTE
{
    required NODE root = 1;
}

//////////////////////////////////////////

enum Cmd {
    CMD_GW_REQ = 1;
    CMD_GW_RSP = 2;
    CMD_N2G_REQ = 3;
    CMD_G2N_RSP = 4;
    CMD_G2M_REQ = 5;
    CMD_M2G_RSP = 6;
    CMD_G2M_MOD = 7;
    CMD_M2G_MOD = 8;
}

message Head {
    required Cmd cmd = 1;
    optional uint32 timestamp = 2;
    optional uint32 sequence = 3;
}

message GWReq
{
}
message GWRsp
{
    optional TCP addr = 1;      // empty means no GW on this machine
}

message N2GReq
{
    required string name = 1;
}
message G2NRsp
{
    required ERR_CODE result = 1;
    optional ROUTE route = 2;
}

message G2MReq
{
    required string name = 1;
    required TCP addr = 2;
}
message M2GRsp
{
    required ERR_CODE result = 1;
    optional ROUTE route = 2;
}

message G2MMod
{
    required NODE node = 1;     // new node
    required bool addordel = 2; // true means add
}
message M2GMod
{
    required NODE node = 1;     // new node
    required NODE parent = 2;   // new node's parent
    required bool addordel = 3; // true means add
}

message PKG
{
    required Head head = 1;

    optional GWReq gw_req = 2;
    optional GWRsp gw_rsp = 3;

    optional N2GReq n2g_req = 4;
    optional G2NRsp g2n_rsp = 5;

    optional G2MReq g2m_req = 6;
    optional M2GRsp m2g_rsp = 7;

    optional G2MMod g2m_mod = 8;
    optional M2GMod m2g_mod = 9;
}

