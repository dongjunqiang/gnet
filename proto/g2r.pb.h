// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: g2r.proto

#ifndef PROTOBUF_g2r_2eproto__INCLUDED
#define PROTOBUF_g2r_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "comm.pb.h"
// @@protoc_insertion_point(includes)

namespace GNET {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_g2r_2eproto();
void protobuf_AssignDesc_g2r_2eproto();
void protobuf_ShutdownFile_g2r_2eproto();

class MG2R_REG_REQ;
class MR2G_REG_RES;
class MG2R_SYNC_REQ;
class MR2G_SYNC_RES;
class MR2G_SYNC_REQ;
class MG2R_SYNC_RES;
class MG2R;

enum EN_CMD_G2R {
  CMD_G2R_REG_REQ = 1,
  CMD_R2G_REG_RES = 2,
  CMD_G2R_SYNC_REQ = 3,
  CMD_R2G_SYNC_RES = 4,
  CMD_R2G_SYNC_REQ = 5,
  CMD_G2R_SYNC_RES = 6,
  CMD_G2R_PING = 7,
  CMD_R2G_PONG = 8
};
bool EN_CMD_G2R_IsValid(int value);
const EN_CMD_G2R EN_CMD_G2R_MIN = CMD_G2R_REG_REQ;
const EN_CMD_G2R EN_CMD_G2R_MAX = CMD_R2G_PONG;
const int EN_CMD_G2R_ARRAYSIZE = EN_CMD_G2R_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_CMD_G2R_descriptor();
inline const ::std::string& EN_CMD_G2R_Name(EN_CMD_G2R value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_CMD_G2R_descriptor(), value);
}
inline bool EN_CMD_G2R_Parse(
    const ::std::string& name, EN_CMD_G2R* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_CMD_G2R>(
    EN_CMD_G2R_descriptor(), name, value);
}
// ===================================================================

class MG2R_REG_REQ : public ::google::protobuf::Message {
 public:
  MG2R_REG_REQ();
  virtual ~MG2R_REG_REQ();

  MG2R_REG_REQ(const MG2R_REG_REQ& from);

  inline MG2R_REG_REQ& operator=(const MG2R_REG_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MG2R_REG_REQ& default_instance();

  void Swap(MG2R_REG_REQ* other);

  // implements Message ----------------------------------------------

  MG2R_REG_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MG2R_REG_REQ& from);
  void MergeFrom(const MG2R_REG_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GNET.MG2R_REG_REQ)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_g2r_2eproto();
  friend void protobuf_AssignDesc_g2r_2eproto();
  friend void protobuf_ShutdownFile_g2r_2eproto();

  void InitAsDefaultInstance();
  static MG2R_REG_REQ* default_instance_;
};
// -------------------------------------------------------------------

class MR2G_REG_RES : public ::google::protobuf::Message {
 public:
  MR2G_REG_RES();
  virtual ~MR2G_REG_RES();

  MR2G_REG_RES(const MR2G_REG_RES& from);

  inline MR2G_REG_RES& operator=(const MR2G_REG_RES& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MR2G_REG_RES& default_instance();

  void Swap(MR2G_REG_RES* other);

  // implements Message ----------------------------------------------

  MR2G_REG_RES* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MR2G_REG_RES& from);
  void MergeFrom(const MR2G_REG_RES& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GNET.MR2G_REG_RES)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_g2r_2eproto();
  friend void protobuf_AssignDesc_g2r_2eproto();
  friend void protobuf_ShutdownFile_g2r_2eproto();

  void InitAsDefaultInstance();
  static MR2G_REG_RES* default_instance_;
};
// -------------------------------------------------------------------

class MG2R_SYNC_REQ : public ::google::protobuf::Message {
 public:
  MG2R_SYNC_REQ();
  virtual ~MG2R_SYNC_REQ();

  MG2R_SYNC_REQ(const MG2R_SYNC_REQ& from);

  inline MG2R_SYNC_REQ& operator=(const MG2R_SYNC_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MG2R_SYNC_REQ& default_instance();

  void Swap(MG2R_SYNC_REQ* other);

  // implements Message ----------------------------------------------

  MG2R_SYNC_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MG2R_SYNC_REQ& from);
  void MergeFrom(const MG2R_SYNC_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seq = 1;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 1;
  inline ::google::protobuf::int32 seq() const;
  inline void set_seq(::google::protobuf::int32 value);

  // repeated .GNET.MSync sync = 2;
  inline int sync_size() const;
  inline void clear_sync();
  static const int kSyncFieldNumber = 2;
  inline const ::GNET::MSync& sync(int index) const;
  inline ::GNET::MSync* mutable_sync(int index);
  inline ::GNET::MSync* add_sync();
  inline const ::google::protobuf::RepeatedPtrField< ::GNET::MSync >&
      sync() const;
  inline ::google::protobuf::RepeatedPtrField< ::GNET::MSync >*
      mutable_sync();

  // @@protoc_insertion_point(class_scope:GNET.MG2R_SYNC_REQ)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GNET::MSync > sync_;
  ::google::protobuf::int32 seq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_g2r_2eproto();
  friend void protobuf_AssignDesc_g2r_2eproto();
  friend void protobuf_ShutdownFile_g2r_2eproto();

  void InitAsDefaultInstance();
  static MG2R_SYNC_REQ* default_instance_;
};
// -------------------------------------------------------------------

class MR2G_SYNC_RES : public ::google::protobuf::Message {
 public:
  MR2G_SYNC_RES();
  virtual ~MR2G_SYNC_RES();

  MR2G_SYNC_RES(const MR2G_SYNC_RES& from);

  inline MR2G_SYNC_RES& operator=(const MR2G_SYNC_RES& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MR2G_SYNC_RES& default_instance();

  void Swap(MR2G_SYNC_RES* other);

  // implements Message ----------------------------------------------

  MR2G_SYNC_RES* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MR2G_SYNC_RES& from);
  void MergeFrom(const MR2G_SYNC_RES& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 seq = 2;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 2;
  inline ::google::protobuf::int32 seq() const;
  inline void set_seq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GNET.MR2G_SYNC_RES)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 seq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_g2r_2eproto();
  friend void protobuf_AssignDesc_g2r_2eproto();
  friend void protobuf_ShutdownFile_g2r_2eproto();

  void InitAsDefaultInstance();
  static MR2G_SYNC_RES* default_instance_;
};
// -------------------------------------------------------------------

class MR2G_SYNC_REQ : public ::google::protobuf::Message {
 public:
  MR2G_SYNC_REQ();
  virtual ~MR2G_SYNC_REQ();

  MR2G_SYNC_REQ(const MR2G_SYNC_REQ& from);

  inline MR2G_SYNC_REQ& operator=(const MR2G_SYNC_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MR2G_SYNC_REQ& default_instance();

  void Swap(MR2G_SYNC_REQ* other);

  // implements Message ----------------------------------------------

  MR2G_SYNC_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MR2G_SYNC_REQ& from);
  void MergeFrom(const MR2G_SYNC_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seq = 1;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 1;
  inline ::google::protobuf::int32 seq() const;
  inline void set_seq(::google::protobuf::int32 value);

  // repeated .GNET.MSync sync = 2;
  inline int sync_size() const;
  inline void clear_sync();
  static const int kSyncFieldNumber = 2;
  inline const ::GNET::MSync& sync(int index) const;
  inline ::GNET::MSync* mutable_sync(int index);
  inline ::GNET::MSync* add_sync();
  inline const ::google::protobuf::RepeatedPtrField< ::GNET::MSync >&
      sync() const;
  inline ::google::protobuf::RepeatedPtrField< ::GNET::MSync >*
      mutable_sync();

  // @@protoc_insertion_point(class_scope:GNET.MR2G_SYNC_REQ)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GNET::MSync > sync_;
  ::google::protobuf::int32 seq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_g2r_2eproto();
  friend void protobuf_AssignDesc_g2r_2eproto();
  friend void protobuf_ShutdownFile_g2r_2eproto();

  void InitAsDefaultInstance();
  static MR2G_SYNC_REQ* default_instance_;
};
// -------------------------------------------------------------------

class MG2R_SYNC_RES : public ::google::protobuf::Message {
 public:
  MG2R_SYNC_RES();
  virtual ~MG2R_SYNC_RES();

  MG2R_SYNC_RES(const MG2R_SYNC_RES& from);

  inline MG2R_SYNC_RES& operator=(const MG2R_SYNC_RES& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MG2R_SYNC_RES& default_instance();

  void Swap(MG2R_SYNC_RES* other);

  // implements Message ----------------------------------------------

  MG2R_SYNC_RES* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MG2R_SYNC_RES& from);
  void MergeFrom(const MG2R_SYNC_RES& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 seq = 2;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 2;
  inline ::google::protobuf::int32 seq() const;
  inline void set_seq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GNET.MG2R_SYNC_RES)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 seq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_g2r_2eproto();
  friend void protobuf_AssignDesc_g2r_2eproto();
  friend void protobuf_ShutdownFile_g2r_2eproto();

  void InitAsDefaultInstance();
  static MG2R_SYNC_RES* default_instance_;
};
// -------------------------------------------------------------------

class MG2R : public ::google::protobuf::Message {
 public:
  MG2R();
  virtual ~MG2R();

  MG2R(const MG2R& from);

  inline MG2R& operator=(const MG2R& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MG2R& default_instance();

  void Swap(MG2R* other);

  // implements Message ----------------------------------------------

  MG2R* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MG2R& from);
  void MergeFrom(const MG2R& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GNET.EN_CMD_G2R cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::GNET::EN_CMD_G2R cmd() const;
  inline void set_cmd(::GNET::EN_CMD_G2R value);

  // optional int32 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::int32 timestamp() const;
  inline void set_timestamp(::google::protobuf::int32 value);

  // optional .GNET.MG2R_REG_REQ mg2r_reg_req = 101;
  inline bool has_mg2r_reg_req() const;
  inline void clear_mg2r_reg_req();
  static const int kMg2RRegReqFieldNumber = 101;
  inline const ::GNET::MG2R_REG_REQ& mg2r_reg_req() const;
  inline ::GNET::MG2R_REG_REQ* mutable_mg2r_reg_req();
  inline ::GNET::MG2R_REG_REQ* release_mg2r_reg_req();
  inline void set_allocated_mg2r_reg_req(::GNET::MG2R_REG_REQ* mg2r_reg_req);

  // optional .GNET.MR2G_REG_RES mr2g_reg_res = 102;
  inline bool has_mr2g_reg_res() const;
  inline void clear_mr2g_reg_res();
  static const int kMr2GRegResFieldNumber = 102;
  inline const ::GNET::MR2G_REG_RES& mr2g_reg_res() const;
  inline ::GNET::MR2G_REG_RES* mutable_mr2g_reg_res();
  inline ::GNET::MR2G_REG_RES* release_mr2g_reg_res();
  inline void set_allocated_mr2g_reg_res(::GNET::MR2G_REG_RES* mr2g_reg_res);

  // optional .GNET.MG2R_SYNC_REQ mg2r_sync_req = 103;
  inline bool has_mg2r_sync_req() const;
  inline void clear_mg2r_sync_req();
  static const int kMg2RSyncReqFieldNumber = 103;
  inline const ::GNET::MG2R_SYNC_REQ& mg2r_sync_req() const;
  inline ::GNET::MG2R_SYNC_REQ* mutable_mg2r_sync_req();
  inline ::GNET::MG2R_SYNC_REQ* release_mg2r_sync_req();
  inline void set_allocated_mg2r_sync_req(::GNET::MG2R_SYNC_REQ* mg2r_sync_req);

  // optional .GNET.MR2G_SYNC_RES mr2g_sync_res = 104;
  inline bool has_mr2g_sync_res() const;
  inline void clear_mr2g_sync_res();
  static const int kMr2GSyncResFieldNumber = 104;
  inline const ::GNET::MR2G_SYNC_RES& mr2g_sync_res() const;
  inline ::GNET::MR2G_SYNC_RES* mutable_mr2g_sync_res();
  inline ::GNET::MR2G_SYNC_RES* release_mr2g_sync_res();
  inline void set_allocated_mr2g_sync_res(::GNET::MR2G_SYNC_RES* mr2g_sync_res);

  // optional .GNET.MR2G_SYNC_REQ mr2g_sync_req = 105;
  inline bool has_mr2g_sync_req() const;
  inline void clear_mr2g_sync_req();
  static const int kMr2GSyncReqFieldNumber = 105;
  inline const ::GNET::MR2G_SYNC_REQ& mr2g_sync_req() const;
  inline ::GNET::MR2G_SYNC_REQ* mutable_mr2g_sync_req();
  inline ::GNET::MR2G_SYNC_REQ* release_mr2g_sync_req();
  inline void set_allocated_mr2g_sync_req(::GNET::MR2G_SYNC_REQ* mr2g_sync_req);

  // optional .GNET.MG2R_SYNC_RES mg2r_sync_res = 106;
  inline bool has_mg2r_sync_res() const;
  inline void clear_mg2r_sync_res();
  static const int kMg2RSyncResFieldNumber = 106;
  inline const ::GNET::MG2R_SYNC_RES& mg2r_sync_res() const;
  inline ::GNET::MG2R_SYNC_RES* mutable_mg2r_sync_res();
  inline ::GNET::MG2R_SYNC_RES* release_mg2r_sync_res();
  inline void set_allocated_mg2r_sync_res(::GNET::MG2R_SYNC_RES* mg2r_sync_res);

  // @@protoc_insertion_point(class_scope:GNET.MG2R)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_mg2r_reg_req();
  inline void clear_has_mg2r_reg_req();
  inline void set_has_mr2g_reg_res();
  inline void clear_has_mr2g_reg_res();
  inline void set_has_mg2r_sync_req();
  inline void clear_has_mg2r_sync_req();
  inline void set_has_mr2g_sync_res();
  inline void clear_has_mr2g_sync_res();
  inline void set_has_mr2g_sync_req();
  inline void clear_has_mr2g_sync_req();
  inline void set_has_mg2r_sync_res();
  inline void clear_has_mg2r_sync_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int cmd_;
  ::google::protobuf::int32 timestamp_;
  ::GNET::MG2R_REG_REQ* mg2r_reg_req_;
  ::GNET::MR2G_REG_RES* mr2g_reg_res_;
  ::GNET::MG2R_SYNC_REQ* mg2r_sync_req_;
  ::GNET::MR2G_SYNC_RES* mr2g_sync_res_;
  ::GNET::MR2G_SYNC_REQ* mr2g_sync_req_;
  ::GNET::MG2R_SYNC_RES* mg2r_sync_res_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_g2r_2eproto();
  friend void protobuf_AssignDesc_g2r_2eproto();
  friend void protobuf_ShutdownFile_g2r_2eproto();

  void InitAsDefaultInstance();
  static MG2R* default_instance_;
};
// ===================================================================


// ===================================================================

// MG2R_REG_REQ

// required int64 id = 1;
inline bool MG2R_REG_REQ::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MG2R_REG_REQ::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MG2R_REG_REQ::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MG2R_REG_REQ::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 MG2R_REG_REQ::id() const {
  return id_;
}
inline void MG2R_REG_REQ::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// MR2G_REG_RES

// required int32 result = 1;
inline bool MR2G_REG_RES::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MR2G_REG_RES::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MR2G_REG_RES::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MR2G_REG_RES::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MR2G_REG_RES::result() const {
  return result_;
}
inline void MR2G_REG_RES::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MG2R_SYNC_REQ

// required int32 seq = 1;
inline bool MG2R_SYNC_REQ::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MG2R_SYNC_REQ::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MG2R_SYNC_REQ::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MG2R_SYNC_REQ::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
inline ::google::protobuf::int32 MG2R_SYNC_REQ::seq() const {
  return seq_;
}
inline void MG2R_SYNC_REQ::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
}

// repeated .GNET.MSync sync = 2;
inline int MG2R_SYNC_REQ::sync_size() const {
  return sync_.size();
}
inline void MG2R_SYNC_REQ::clear_sync() {
  sync_.Clear();
}
inline const ::GNET::MSync& MG2R_SYNC_REQ::sync(int index) const {
  return sync_.Get(index);
}
inline ::GNET::MSync* MG2R_SYNC_REQ::mutable_sync(int index) {
  return sync_.Mutable(index);
}
inline ::GNET::MSync* MG2R_SYNC_REQ::add_sync() {
  return sync_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GNET::MSync >&
MG2R_SYNC_REQ::sync() const {
  return sync_;
}
inline ::google::protobuf::RepeatedPtrField< ::GNET::MSync >*
MG2R_SYNC_REQ::mutable_sync() {
  return &sync_;
}

// -------------------------------------------------------------------

// MR2G_SYNC_RES

// required int32 result = 1;
inline bool MR2G_SYNC_RES::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MR2G_SYNC_RES::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MR2G_SYNC_RES::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MR2G_SYNC_RES::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MR2G_SYNC_RES::result() const {
  return result_;
}
inline void MR2G_SYNC_RES::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 seq = 2;
inline bool MR2G_SYNC_RES::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MR2G_SYNC_RES::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MR2G_SYNC_RES::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MR2G_SYNC_RES::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
inline ::google::protobuf::int32 MR2G_SYNC_RES::seq() const {
  return seq_;
}
inline void MR2G_SYNC_RES::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
}

// -------------------------------------------------------------------

// MR2G_SYNC_REQ

// required int32 seq = 1;
inline bool MR2G_SYNC_REQ::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MR2G_SYNC_REQ::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MR2G_SYNC_REQ::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MR2G_SYNC_REQ::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
inline ::google::protobuf::int32 MR2G_SYNC_REQ::seq() const {
  return seq_;
}
inline void MR2G_SYNC_REQ::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
}

// repeated .GNET.MSync sync = 2;
inline int MR2G_SYNC_REQ::sync_size() const {
  return sync_.size();
}
inline void MR2G_SYNC_REQ::clear_sync() {
  sync_.Clear();
}
inline const ::GNET::MSync& MR2G_SYNC_REQ::sync(int index) const {
  return sync_.Get(index);
}
inline ::GNET::MSync* MR2G_SYNC_REQ::mutable_sync(int index) {
  return sync_.Mutable(index);
}
inline ::GNET::MSync* MR2G_SYNC_REQ::add_sync() {
  return sync_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GNET::MSync >&
MR2G_SYNC_REQ::sync() const {
  return sync_;
}
inline ::google::protobuf::RepeatedPtrField< ::GNET::MSync >*
MR2G_SYNC_REQ::mutable_sync() {
  return &sync_;
}

// -------------------------------------------------------------------

// MG2R_SYNC_RES

// required int32 result = 1;
inline bool MG2R_SYNC_RES::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MG2R_SYNC_RES::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MG2R_SYNC_RES::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MG2R_SYNC_RES::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MG2R_SYNC_RES::result() const {
  return result_;
}
inline void MG2R_SYNC_RES::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 seq = 2;
inline bool MG2R_SYNC_RES::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MG2R_SYNC_RES::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MG2R_SYNC_RES::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MG2R_SYNC_RES::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
inline ::google::protobuf::int32 MG2R_SYNC_RES::seq() const {
  return seq_;
}
inline void MG2R_SYNC_RES::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
}

// -------------------------------------------------------------------

// MG2R

// required .GNET.EN_CMD_G2R cmd = 1;
inline bool MG2R::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MG2R::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MG2R::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MG2R::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::GNET::EN_CMD_G2R MG2R::cmd() const {
  return static_cast< ::GNET::EN_CMD_G2R >(cmd_);
}
inline void MG2R::set_cmd(::GNET::EN_CMD_G2R value) {
  assert(::GNET::EN_CMD_G2R_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional int32 timestamp = 2;
inline bool MG2R::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MG2R::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MG2R::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MG2R::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 MG2R::timestamp() const {
  return timestamp_;
}
inline void MG2R::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional .GNET.MG2R_REG_REQ mg2r_reg_req = 101;
inline bool MG2R::has_mg2r_reg_req() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MG2R::set_has_mg2r_reg_req() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MG2R::clear_has_mg2r_reg_req() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MG2R::clear_mg2r_reg_req() {
  if (mg2r_reg_req_ != NULL) mg2r_reg_req_->::GNET::MG2R_REG_REQ::Clear();
  clear_has_mg2r_reg_req();
}
inline const ::GNET::MG2R_REG_REQ& MG2R::mg2r_reg_req() const {
  return mg2r_reg_req_ != NULL ? *mg2r_reg_req_ : *default_instance_->mg2r_reg_req_;
}
inline ::GNET::MG2R_REG_REQ* MG2R::mutable_mg2r_reg_req() {
  set_has_mg2r_reg_req();
  if (mg2r_reg_req_ == NULL) mg2r_reg_req_ = new ::GNET::MG2R_REG_REQ;
  return mg2r_reg_req_;
}
inline ::GNET::MG2R_REG_REQ* MG2R::release_mg2r_reg_req() {
  clear_has_mg2r_reg_req();
  ::GNET::MG2R_REG_REQ* temp = mg2r_reg_req_;
  mg2r_reg_req_ = NULL;
  return temp;
}
inline void MG2R::set_allocated_mg2r_reg_req(::GNET::MG2R_REG_REQ* mg2r_reg_req) {
  delete mg2r_reg_req_;
  mg2r_reg_req_ = mg2r_reg_req;
  if (mg2r_reg_req) {
    set_has_mg2r_reg_req();
  } else {
    clear_has_mg2r_reg_req();
  }
}

// optional .GNET.MR2G_REG_RES mr2g_reg_res = 102;
inline bool MG2R::has_mr2g_reg_res() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MG2R::set_has_mr2g_reg_res() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MG2R::clear_has_mr2g_reg_res() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MG2R::clear_mr2g_reg_res() {
  if (mr2g_reg_res_ != NULL) mr2g_reg_res_->::GNET::MR2G_REG_RES::Clear();
  clear_has_mr2g_reg_res();
}
inline const ::GNET::MR2G_REG_RES& MG2R::mr2g_reg_res() const {
  return mr2g_reg_res_ != NULL ? *mr2g_reg_res_ : *default_instance_->mr2g_reg_res_;
}
inline ::GNET::MR2G_REG_RES* MG2R::mutable_mr2g_reg_res() {
  set_has_mr2g_reg_res();
  if (mr2g_reg_res_ == NULL) mr2g_reg_res_ = new ::GNET::MR2G_REG_RES;
  return mr2g_reg_res_;
}
inline ::GNET::MR2G_REG_RES* MG2R::release_mr2g_reg_res() {
  clear_has_mr2g_reg_res();
  ::GNET::MR2G_REG_RES* temp = mr2g_reg_res_;
  mr2g_reg_res_ = NULL;
  return temp;
}
inline void MG2R::set_allocated_mr2g_reg_res(::GNET::MR2G_REG_RES* mr2g_reg_res) {
  delete mr2g_reg_res_;
  mr2g_reg_res_ = mr2g_reg_res;
  if (mr2g_reg_res) {
    set_has_mr2g_reg_res();
  } else {
    clear_has_mr2g_reg_res();
  }
}

// optional .GNET.MG2R_SYNC_REQ mg2r_sync_req = 103;
inline bool MG2R::has_mg2r_sync_req() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MG2R::set_has_mg2r_sync_req() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MG2R::clear_has_mg2r_sync_req() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MG2R::clear_mg2r_sync_req() {
  if (mg2r_sync_req_ != NULL) mg2r_sync_req_->::GNET::MG2R_SYNC_REQ::Clear();
  clear_has_mg2r_sync_req();
}
inline const ::GNET::MG2R_SYNC_REQ& MG2R::mg2r_sync_req() const {
  return mg2r_sync_req_ != NULL ? *mg2r_sync_req_ : *default_instance_->mg2r_sync_req_;
}
inline ::GNET::MG2R_SYNC_REQ* MG2R::mutable_mg2r_sync_req() {
  set_has_mg2r_sync_req();
  if (mg2r_sync_req_ == NULL) mg2r_sync_req_ = new ::GNET::MG2R_SYNC_REQ;
  return mg2r_sync_req_;
}
inline ::GNET::MG2R_SYNC_REQ* MG2R::release_mg2r_sync_req() {
  clear_has_mg2r_sync_req();
  ::GNET::MG2R_SYNC_REQ* temp = mg2r_sync_req_;
  mg2r_sync_req_ = NULL;
  return temp;
}
inline void MG2R::set_allocated_mg2r_sync_req(::GNET::MG2R_SYNC_REQ* mg2r_sync_req) {
  delete mg2r_sync_req_;
  mg2r_sync_req_ = mg2r_sync_req;
  if (mg2r_sync_req) {
    set_has_mg2r_sync_req();
  } else {
    clear_has_mg2r_sync_req();
  }
}

// optional .GNET.MR2G_SYNC_RES mr2g_sync_res = 104;
inline bool MG2R::has_mr2g_sync_res() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MG2R::set_has_mr2g_sync_res() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MG2R::clear_has_mr2g_sync_res() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MG2R::clear_mr2g_sync_res() {
  if (mr2g_sync_res_ != NULL) mr2g_sync_res_->::GNET::MR2G_SYNC_RES::Clear();
  clear_has_mr2g_sync_res();
}
inline const ::GNET::MR2G_SYNC_RES& MG2R::mr2g_sync_res() const {
  return mr2g_sync_res_ != NULL ? *mr2g_sync_res_ : *default_instance_->mr2g_sync_res_;
}
inline ::GNET::MR2G_SYNC_RES* MG2R::mutable_mr2g_sync_res() {
  set_has_mr2g_sync_res();
  if (mr2g_sync_res_ == NULL) mr2g_sync_res_ = new ::GNET::MR2G_SYNC_RES;
  return mr2g_sync_res_;
}
inline ::GNET::MR2G_SYNC_RES* MG2R::release_mr2g_sync_res() {
  clear_has_mr2g_sync_res();
  ::GNET::MR2G_SYNC_RES* temp = mr2g_sync_res_;
  mr2g_sync_res_ = NULL;
  return temp;
}
inline void MG2R::set_allocated_mr2g_sync_res(::GNET::MR2G_SYNC_RES* mr2g_sync_res) {
  delete mr2g_sync_res_;
  mr2g_sync_res_ = mr2g_sync_res;
  if (mr2g_sync_res) {
    set_has_mr2g_sync_res();
  } else {
    clear_has_mr2g_sync_res();
  }
}

// optional .GNET.MR2G_SYNC_REQ mr2g_sync_req = 105;
inline bool MG2R::has_mr2g_sync_req() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MG2R::set_has_mr2g_sync_req() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MG2R::clear_has_mr2g_sync_req() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MG2R::clear_mr2g_sync_req() {
  if (mr2g_sync_req_ != NULL) mr2g_sync_req_->::GNET::MR2G_SYNC_REQ::Clear();
  clear_has_mr2g_sync_req();
}
inline const ::GNET::MR2G_SYNC_REQ& MG2R::mr2g_sync_req() const {
  return mr2g_sync_req_ != NULL ? *mr2g_sync_req_ : *default_instance_->mr2g_sync_req_;
}
inline ::GNET::MR2G_SYNC_REQ* MG2R::mutable_mr2g_sync_req() {
  set_has_mr2g_sync_req();
  if (mr2g_sync_req_ == NULL) mr2g_sync_req_ = new ::GNET::MR2G_SYNC_REQ;
  return mr2g_sync_req_;
}
inline ::GNET::MR2G_SYNC_REQ* MG2R::release_mr2g_sync_req() {
  clear_has_mr2g_sync_req();
  ::GNET::MR2G_SYNC_REQ* temp = mr2g_sync_req_;
  mr2g_sync_req_ = NULL;
  return temp;
}
inline void MG2R::set_allocated_mr2g_sync_req(::GNET::MR2G_SYNC_REQ* mr2g_sync_req) {
  delete mr2g_sync_req_;
  mr2g_sync_req_ = mr2g_sync_req;
  if (mr2g_sync_req) {
    set_has_mr2g_sync_req();
  } else {
    clear_has_mr2g_sync_req();
  }
}

// optional .GNET.MG2R_SYNC_RES mg2r_sync_res = 106;
inline bool MG2R::has_mg2r_sync_res() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MG2R::set_has_mg2r_sync_res() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MG2R::clear_has_mg2r_sync_res() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MG2R::clear_mg2r_sync_res() {
  if (mg2r_sync_res_ != NULL) mg2r_sync_res_->::GNET::MG2R_SYNC_RES::Clear();
  clear_has_mg2r_sync_res();
}
inline const ::GNET::MG2R_SYNC_RES& MG2R::mg2r_sync_res() const {
  return mg2r_sync_res_ != NULL ? *mg2r_sync_res_ : *default_instance_->mg2r_sync_res_;
}
inline ::GNET::MG2R_SYNC_RES* MG2R::mutable_mg2r_sync_res() {
  set_has_mg2r_sync_res();
  if (mg2r_sync_res_ == NULL) mg2r_sync_res_ = new ::GNET::MG2R_SYNC_RES;
  return mg2r_sync_res_;
}
inline ::GNET::MG2R_SYNC_RES* MG2R::release_mg2r_sync_res() {
  clear_has_mg2r_sync_res();
  ::GNET::MG2R_SYNC_RES* temp = mg2r_sync_res_;
  mg2r_sync_res_ = NULL;
  return temp;
}
inline void MG2R::set_allocated_mg2r_sync_res(::GNET::MG2R_SYNC_RES* mg2r_sync_res) {
  delete mg2r_sync_res_;
  mg2r_sync_res_ = mg2r_sync_res;
  if (mg2r_sync_res) {
    set_has_mg2r_sync_res();
  } else {
    clear_has_mg2r_sync_res();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GNET

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GNET::EN_CMD_G2R>() {
  return ::GNET::EN_CMD_G2R_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_g2r_2eproto__INCLUDED
