// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2g.proto

#ifndef PROTOBUF_s2g_2eproto__INCLUDED
#define PROTOBUF_s2g_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "comm.pb.h"
// @@protoc_insertion_point(includes)

namespace GNET {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_s2g_2eproto();
void protobuf_AssignDesc_s2g_2eproto();
void protobuf_ShutdownFile_s2g_2eproto();

class MS2G_REG_REQ;
class MG2S_REG_RES;
class MG2S_SYNC_REQ;
class MS2G_SYNC_RES;
class MS2G_FWD;
class MG2S_FWD;
class MS2G;

enum EN_CMD_S2G {
  CMD_S2G_REG_REQ = 1,
  CMD_G2S_REG_RES = 2,
  CMD_G2S_SYNC_REQ = 3,
  CMD_S2G_SYNC_RES = 4,
  CMD_G2S_FWD = 5,
  CMD_S2G_FWD = 6
};
bool EN_CMD_S2G_IsValid(int value);
const EN_CMD_S2G EN_CMD_S2G_MIN = CMD_S2G_REG_REQ;
const EN_CMD_S2G EN_CMD_S2G_MAX = CMD_S2G_FWD;
const int EN_CMD_S2G_ARRAYSIZE = EN_CMD_S2G_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_CMD_S2G_descriptor();
inline const ::std::string& EN_CMD_S2G_Name(EN_CMD_S2G value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_CMD_S2G_descriptor(), value);
}
inline bool EN_CMD_S2G_Parse(
    const ::std::string& name, EN_CMD_S2G* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_CMD_S2G>(
    EN_CMD_S2G_descriptor(), name, value);
}
// ===================================================================

class MS2G_REG_REQ : public ::google::protobuf::Message {
 public:
  MS2G_REG_REQ();
  virtual ~MS2G_REG_REQ();

  MS2G_REG_REQ(const MS2G_REG_REQ& from);

  inline MS2G_REG_REQ& operator=(const MS2G_REG_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MS2G_REG_REQ& default_instance();

  void Swap(MS2G_REG_REQ* other);

  // implements Message ----------------------------------------------

  MS2G_REG_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MS2G_REG_REQ& from);
  void MergeFrom(const MS2G_REG_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GNET.MS2G_REG_REQ)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_s2g_2eproto();
  friend void protobuf_AssignDesc_s2g_2eproto();
  friend void protobuf_ShutdownFile_s2g_2eproto();

  void InitAsDefaultInstance();
  static MS2G_REG_REQ* default_instance_;
};
// -------------------------------------------------------------------

class MG2S_REG_RES : public ::google::protobuf::Message {
 public:
  MG2S_REG_RES();
  virtual ~MG2S_REG_RES();

  MG2S_REG_RES(const MG2S_REG_RES& from);

  inline MG2S_REG_RES& operator=(const MG2S_REG_RES& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MG2S_REG_RES& default_instance();

  void Swap(MG2S_REG_RES* other);

  // implements Message ----------------------------------------------

  MG2S_REG_RES* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MG2S_REG_RES& from);
  void MergeFrom(const MG2S_REG_RES& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GNET.MG2S_REG_RES)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_s2g_2eproto();
  friend void protobuf_AssignDesc_s2g_2eproto();
  friend void protobuf_ShutdownFile_s2g_2eproto();

  void InitAsDefaultInstance();
  static MG2S_REG_RES* default_instance_;
};
// -------------------------------------------------------------------

class MG2S_SYNC_REQ : public ::google::protobuf::Message {
 public:
  MG2S_SYNC_REQ();
  virtual ~MG2S_SYNC_REQ();

  MG2S_SYNC_REQ(const MG2S_SYNC_REQ& from);

  inline MG2S_SYNC_REQ& operator=(const MG2S_SYNC_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MG2S_SYNC_REQ& default_instance();

  void Swap(MG2S_SYNC_REQ* other);

  // implements Message ----------------------------------------------

  MG2S_SYNC_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MG2S_SYNC_REQ& from);
  void MergeFrom(const MG2S_SYNC_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seq = 1;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 1;
  inline ::google::protobuf::int32 seq() const;
  inline void set_seq(::google::protobuf::int32 value);

  // repeated .GNET.MSync sync = 2;
  inline int sync_size() const;
  inline void clear_sync();
  static const int kSyncFieldNumber = 2;
  inline const ::GNET::MSync& sync(int index) const;
  inline ::GNET::MSync* mutable_sync(int index);
  inline ::GNET::MSync* add_sync();
  inline const ::google::protobuf::RepeatedPtrField< ::GNET::MSync >&
      sync() const;
  inline ::google::protobuf::RepeatedPtrField< ::GNET::MSync >*
      mutable_sync();

  // @@protoc_insertion_point(class_scope:GNET.MG2S_SYNC_REQ)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GNET::MSync > sync_;
  ::google::protobuf::int32 seq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_s2g_2eproto();
  friend void protobuf_AssignDesc_s2g_2eproto();
  friend void protobuf_ShutdownFile_s2g_2eproto();

  void InitAsDefaultInstance();
  static MG2S_SYNC_REQ* default_instance_;
};
// -------------------------------------------------------------------

class MS2G_SYNC_RES : public ::google::protobuf::Message {
 public:
  MS2G_SYNC_RES();
  virtual ~MS2G_SYNC_RES();

  MS2G_SYNC_RES(const MS2G_SYNC_RES& from);

  inline MS2G_SYNC_RES& operator=(const MS2G_SYNC_RES& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MS2G_SYNC_RES& default_instance();

  void Swap(MS2G_SYNC_RES* other);

  // implements Message ----------------------------------------------

  MS2G_SYNC_RES* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MS2G_SYNC_RES& from);
  void MergeFrom(const MS2G_SYNC_RES& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 seq = 2;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 2;
  inline ::google::protobuf::int32 seq() const;
  inline void set_seq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GNET.MS2G_SYNC_RES)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 seq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_s2g_2eproto();
  friend void protobuf_AssignDesc_s2g_2eproto();
  friend void protobuf_ShutdownFile_s2g_2eproto();

  void InitAsDefaultInstance();
  static MS2G_SYNC_RES* default_instance_;
};
// -------------------------------------------------------------------

class MS2G_FWD : public ::google::protobuf::Message {
 public:
  MS2G_FWD();
  virtual ~MS2G_FWD();

  MS2G_FWD(const MS2G_FWD& from);

  inline MS2G_FWD& operator=(const MS2G_FWD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MS2G_FWD& default_instance();

  void Swap(MS2G_FWD* other);

  // implements Message ----------------------------------------------

  MS2G_FWD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MS2G_FWD& from);
  void MergeFrom(const MS2G_FWD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 to = 1;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 1;
  inline ::google::protobuf::int32 to() const;
  inline void set_to(::google::protobuf::int32 value);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:GNET.MS2G_FWD)
 private:
  inline void set_has_to();
  inline void clear_has_to();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* data_;
  ::google::protobuf::int32 to_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_s2g_2eproto();
  friend void protobuf_AssignDesc_s2g_2eproto();
  friend void protobuf_ShutdownFile_s2g_2eproto();

  void InitAsDefaultInstance();
  static MS2G_FWD* default_instance_;
};
// -------------------------------------------------------------------

class MG2S_FWD : public ::google::protobuf::Message {
 public:
  MG2S_FWD();
  virtual ~MG2S_FWD();

  MG2S_FWD(const MG2S_FWD& from);

  inline MG2S_FWD& operator=(const MG2S_FWD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MG2S_FWD& default_instance();

  void Swap(MG2S_FWD* other);

  // implements Message ----------------------------------------------

  MG2S_FWD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MG2S_FWD& from);
  void MergeFrom(const MG2S_FWD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 from = 1;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 1;
  inline ::google::protobuf::int32 from() const;
  inline void set_from(::google::protobuf::int32 value);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:GNET.MG2S_FWD)
 private:
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* data_;
  ::google::protobuf::int32 from_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_s2g_2eproto();
  friend void protobuf_AssignDesc_s2g_2eproto();
  friend void protobuf_ShutdownFile_s2g_2eproto();

  void InitAsDefaultInstance();
  static MG2S_FWD* default_instance_;
};
// -------------------------------------------------------------------

class MS2G : public ::google::protobuf::Message {
 public:
  MS2G();
  virtual ~MS2G();

  MS2G(const MS2G& from);

  inline MS2G& operator=(const MS2G& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MS2G& default_instance();

  void Swap(MS2G* other);

  // implements Message ----------------------------------------------

  MS2G* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MS2G& from);
  void MergeFrom(const MS2G& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GNET.EN_CMD_S2G cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::GNET::EN_CMD_S2G cmd() const;
  inline void set_cmd(::GNET::EN_CMD_S2G value);

  // optional int32 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::int32 timestamp() const;
  inline void set_timestamp(::google::protobuf::int32 value);

  // optional .GNET.MS2G_REG_REQ ms2g_reg_req = 101;
  inline bool has_ms2g_reg_req() const;
  inline void clear_ms2g_reg_req();
  static const int kMs2GRegReqFieldNumber = 101;
  inline const ::GNET::MS2G_REG_REQ& ms2g_reg_req() const;
  inline ::GNET::MS2G_REG_REQ* mutable_ms2g_reg_req();
  inline ::GNET::MS2G_REG_REQ* release_ms2g_reg_req();
  inline void set_allocated_ms2g_reg_req(::GNET::MS2G_REG_REQ* ms2g_reg_req);

  // optional .GNET.MG2S_REG_RES mg2s_reg_res = 102;
  inline bool has_mg2s_reg_res() const;
  inline void clear_mg2s_reg_res();
  static const int kMg2SRegResFieldNumber = 102;
  inline const ::GNET::MG2S_REG_RES& mg2s_reg_res() const;
  inline ::GNET::MG2S_REG_RES* mutable_mg2s_reg_res();
  inline ::GNET::MG2S_REG_RES* release_mg2s_reg_res();
  inline void set_allocated_mg2s_reg_res(::GNET::MG2S_REG_RES* mg2s_reg_res);

  // optional .GNET.MG2S_SYNC_REQ mg2s_sync_req = 103;
  inline bool has_mg2s_sync_req() const;
  inline void clear_mg2s_sync_req();
  static const int kMg2SSyncReqFieldNumber = 103;
  inline const ::GNET::MG2S_SYNC_REQ& mg2s_sync_req() const;
  inline ::GNET::MG2S_SYNC_REQ* mutable_mg2s_sync_req();
  inline ::GNET::MG2S_SYNC_REQ* release_mg2s_sync_req();
  inline void set_allocated_mg2s_sync_req(::GNET::MG2S_SYNC_REQ* mg2s_sync_req);

  // optional .GNET.MS2G_SYNC_RES ms2g_sync_res = 104;
  inline bool has_ms2g_sync_res() const;
  inline void clear_ms2g_sync_res();
  static const int kMs2GSyncResFieldNumber = 104;
  inline const ::GNET::MS2G_SYNC_RES& ms2g_sync_res() const;
  inline ::GNET::MS2G_SYNC_RES* mutable_ms2g_sync_res();
  inline ::GNET::MS2G_SYNC_RES* release_ms2g_sync_res();
  inline void set_allocated_ms2g_sync_res(::GNET::MS2G_SYNC_RES* ms2g_sync_res);

  // optional .GNET.MS2G_FWD ms2g_fwd = 105;
  inline bool has_ms2g_fwd() const;
  inline void clear_ms2g_fwd();
  static const int kMs2GFwdFieldNumber = 105;
  inline const ::GNET::MS2G_FWD& ms2g_fwd() const;
  inline ::GNET::MS2G_FWD* mutable_ms2g_fwd();
  inline ::GNET::MS2G_FWD* release_ms2g_fwd();
  inline void set_allocated_ms2g_fwd(::GNET::MS2G_FWD* ms2g_fwd);

  // optional .GNET.MG2S_FWD mg2s_fwd = 106;
  inline bool has_mg2s_fwd() const;
  inline void clear_mg2s_fwd();
  static const int kMg2SFwdFieldNumber = 106;
  inline const ::GNET::MG2S_FWD& mg2s_fwd() const;
  inline ::GNET::MG2S_FWD* mutable_mg2s_fwd();
  inline ::GNET::MG2S_FWD* release_mg2s_fwd();
  inline void set_allocated_mg2s_fwd(::GNET::MG2S_FWD* mg2s_fwd);

  // @@protoc_insertion_point(class_scope:GNET.MS2G)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_ms2g_reg_req();
  inline void clear_has_ms2g_reg_req();
  inline void set_has_mg2s_reg_res();
  inline void clear_has_mg2s_reg_res();
  inline void set_has_mg2s_sync_req();
  inline void clear_has_mg2s_sync_req();
  inline void set_has_ms2g_sync_res();
  inline void clear_has_ms2g_sync_res();
  inline void set_has_ms2g_fwd();
  inline void clear_has_ms2g_fwd();
  inline void set_has_mg2s_fwd();
  inline void clear_has_mg2s_fwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int cmd_;
  ::google::protobuf::int32 timestamp_;
  ::GNET::MS2G_REG_REQ* ms2g_reg_req_;
  ::GNET::MG2S_REG_RES* mg2s_reg_res_;
  ::GNET::MG2S_SYNC_REQ* mg2s_sync_req_;
  ::GNET::MS2G_SYNC_RES* ms2g_sync_res_;
  ::GNET::MS2G_FWD* ms2g_fwd_;
  ::GNET::MG2S_FWD* mg2s_fwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_s2g_2eproto();
  friend void protobuf_AssignDesc_s2g_2eproto();
  friend void protobuf_ShutdownFile_s2g_2eproto();

  void InitAsDefaultInstance();
  static MS2G* default_instance_;
};
// ===================================================================


// ===================================================================

// MS2G_REG_REQ

// required int64 id = 1;
inline bool MS2G_REG_REQ::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MS2G_REG_REQ::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MS2G_REG_REQ::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MS2G_REG_REQ::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 MS2G_REG_REQ::id() const {
  return id_;
}
inline void MS2G_REG_REQ::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// MG2S_REG_RES

// required int32 result = 1;
inline bool MG2S_REG_RES::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MG2S_REG_RES::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MG2S_REG_RES::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MG2S_REG_RES::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MG2S_REG_RES::result() const {
  return result_;
}
inline void MG2S_REG_RES::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MG2S_SYNC_REQ

// required int32 seq = 1;
inline bool MG2S_SYNC_REQ::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MG2S_SYNC_REQ::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MG2S_SYNC_REQ::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MG2S_SYNC_REQ::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
inline ::google::protobuf::int32 MG2S_SYNC_REQ::seq() const {
  return seq_;
}
inline void MG2S_SYNC_REQ::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
}

// repeated .GNET.MSync sync = 2;
inline int MG2S_SYNC_REQ::sync_size() const {
  return sync_.size();
}
inline void MG2S_SYNC_REQ::clear_sync() {
  sync_.Clear();
}
inline const ::GNET::MSync& MG2S_SYNC_REQ::sync(int index) const {
  return sync_.Get(index);
}
inline ::GNET::MSync* MG2S_SYNC_REQ::mutable_sync(int index) {
  return sync_.Mutable(index);
}
inline ::GNET::MSync* MG2S_SYNC_REQ::add_sync() {
  return sync_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GNET::MSync >&
MG2S_SYNC_REQ::sync() const {
  return sync_;
}
inline ::google::protobuf::RepeatedPtrField< ::GNET::MSync >*
MG2S_SYNC_REQ::mutable_sync() {
  return &sync_;
}

// -------------------------------------------------------------------

// MS2G_SYNC_RES

// required int32 result = 1;
inline bool MS2G_SYNC_RES::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MS2G_SYNC_RES::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MS2G_SYNC_RES::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MS2G_SYNC_RES::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MS2G_SYNC_RES::result() const {
  return result_;
}
inline void MS2G_SYNC_RES::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 seq = 2;
inline bool MS2G_SYNC_RES::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MS2G_SYNC_RES::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MS2G_SYNC_RES::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MS2G_SYNC_RES::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
inline ::google::protobuf::int32 MS2G_SYNC_RES::seq() const {
  return seq_;
}
inline void MS2G_SYNC_RES::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
}

// -------------------------------------------------------------------

// MS2G_FWD

// required int32 to = 1;
inline bool MS2G_FWD::has_to() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MS2G_FWD::set_has_to() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MS2G_FWD::clear_has_to() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MS2G_FWD::clear_to() {
  to_ = 0;
  clear_has_to();
}
inline ::google::protobuf::int32 MS2G_FWD::to() const {
  return to_;
}
inline void MS2G_FWD::set_to(::google::protobuf::int32 value) {
  set_has_to();
  to_ = value;
}

// required bytes data = 2;
inline bool MS2G_FWD::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MS2G_FWD::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MS2G_FWD::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MS2G_FWD::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& MS2G_FWD::data() const {
  return *data_;
}
inline void MS2G_FWD::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void MS2G_FWD::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void MS2G_FWD::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MS2G_FWD::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* MS2G_FWD::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MS2G_FWD::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MG2S_FWD

// required int32 from = 1;
inline bool MG2S_FWD::has_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MG2S_FWD::set_has_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MG2S_FWD::clear_has_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MG2S_FWD::clear_from() {
  from_ = 0;
  clear_has_from();
}
inline ::google::protobuf::int32 MG2S_FWD::from() const {
  return from_;
}
inline void MG2S_FWD::set_from(::google::protobuf::int32 value) {
  set_has_from();
  from_ = value;
}

// required bytes data = 2;
inline bool MG2S_FWD::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MG2S_FWD::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MG2S_FWD::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MG2S_FWD::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& MG2S_FWD::data() const {
  return *data_;
}
inline void MG2S_FWD::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void MG2S_FWD::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void MG2S_FWD::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MG2S_FWD::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* MG2S_FWD::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MG2S_FWD::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MS2G

// required .GNET.EN_CMD_S2G cmd = 1;
inline bool MS2G::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MS2G::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MS2G::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MS2G::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::GNET::EN_CMD_S2G MS2G::cmd() const {
  return static_cast< ::GNET::EN_CMD_S2G >(cmd_);
}
inline void MS2G::set_cmd(::GNET::EN_CMD_S2G value) {
  assert(::GNET::EN_CMD_S2G_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional int32 timestamp = 2;
inline bool MS2G::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MS2G::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MS2G::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MS2G::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 MS2G::timestamp() const {
  return timestamp_;
}
inline void MS2G::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional .GNET.MS2G_REG_REQ ms2g_reg_req = 101;
inline bool MS2G::has_ms2g_reg_req() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MS2G::set_has_ms2g_reg_req() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MS2G::clear_has_ms2g_reg_req() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MS2G::clear_ms2g_reg_req() {
  if (ms2g_reg_req_ != NULL) ms2g_reg_req_->::GNET::MS2G_REG_REQ::Clear();
  clear_has_ms2g_reg_req();
}
inline const ::GNET::MS2G_REG_REQ& MS2G::ms2g_reg_req() const {
  return ms2g_reg_req_ != NULL ? *ms2g_reg_req_ : *default_instance_->ms2g_reg_req_;
}
inline ::GNET::MS2G_REG_REQ* MS2G::mutable_ms2g_reg_req() {
  set_has_ms2g_reg_req();
  if (ms2g_reg_req_ == NULL) ms2g_reg_req_ = new ::GNET::MS2G_REG_REQ;
  return ms2g_reg_req_;
}
inline ::GNET::MS2G_REG_REQ* MS2G::release_ms2g_reg_req() {
  clear_has_ms2g_reg_req();
  ::GNET::MS2G_REG_REQ* temp = ms2g_reg_req_;
  ms2g_reg_req_ = NULL;
  return temp;
}
inline void MS2G::set_allocated_ms2g_reg_req(::GNET::MS2G_REG_REQ* ms2g_reg_req) {
  delete ms2g_reg_req_;
  ms2g_reg_req_ = ms2g_reg_req;
  if (ms2g_reg_req) {
    set_has_ms2g_reg_req();
  } else {
    clear_has_ms2g_reg_req();
  }
}

// optional .GNET.MG2S_REG_RES mg2s_reg_res = 102;
inline bool MS2G::has_mg2s_reg_res() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MS2G::set_has_mg2s_reg_res() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MS2G::clear_has_mg2s_reg_res() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MS2G::clear_mg2s_reg_res() {
  if (mg2s_reg_res_ != NULL) mg2s_reg_res_->::GNET::MG2S_REG_RES::Clear();
  clear_has_mg2s_reg_res();
}
inline const ::GNET::MG2S_REG_RES& MS2G::mg2s_reg_res() const {
  return mg2s_reg_res_ != NULL ? *mg2s_reg_res_ : *default_instance_->mg2s_reg_res_;
}
inline ::GNET::MG2S_REG_RES* MS2G::mutable_mg2s_reg_res() {
  set_has_mg2s_reg_res();
  if (mg2s_reg_res_ == NULL) mg2s_reg_res_ = new ::GNET::MG2S_REG_RES;
  return mg2s_reg_res_;
}
inline ::GNET::MG2S_REG_RES* MS2G::release_mg2s_reg_res() {
  clear_has_mg2s_reg_res();
  ::GNET::MG2S_REG_RES* temp = mg2s_reg_res_;
  mg2s_reg_res_ = NULL;
  return temp;
}
inline void MS2G::set_allocated_mg2s_reg_res(::GNET::MG2S_REG_RES* mg2s_reg_res) {
  delete mg2s_reg_res_;
  mg2s_reg_res_ = mg2s_reg_res;
  if (mg2s_reg_res) {
    set_has_mg2s_reg_res();
  } else {
    clear_has_mg2s_reg_res();
  }
}

// optional .GNET.MG2S_SYNC_REQ mg2s_sync_req = 103;
inline bool MS2G::has_mg2s_sync_req() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MS2G::set_has_mg2s_sync_req() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MS2G::clear_has_mg2s_sync_req() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MS2G::clear_mg2s_sync_req() {
  if (mg2s_sync_req_ != NULL) mg2s_sync_req_->::GNET::MG2S_SYNC_REQ::Clear();
  clear_has_mg2s_sync_req();
}
inline const ::GNET::MG2S_SYNC_REQ& MS2G::mg2s_sync_req() const {
  return mg2s_sync_req_ != NULL ? *mg2s_sync_req_ : *default_instance_->mg2s_sync_req_;
}
inline ::GNET::MG2S_SYNC_REQ* MS2G::mutable_mg2s_sync_req() {
  set_has_mg2s_sync_req();
  if (mg2s_sync_req_ == NULL) mg2s_sync_req_ = new ::GNET::MG2S_SYNC_REQ;
  return mg2s_sync_req_;
}
inline ::GNET::MG2S_SYNC_REQ* MS2G::release_mg2s_sync_req() {
  clear_has_mg2s_sync_req();
  ::GNET::MG2S_SYNC_REQ* temp = mg2s_sync_req_;
  mg2s_sync_req_ = NULL;
  return temp;
}
inline void MS2G::set_allocated_mg2s_sync_req(::GNET::MG2S_SYNC_REQ* mg2s_sync_req) {
  delete mg2s_sync_req_;
  mg2s_sync_req_ = mg2s_sync_req;
  if (mg2s_sync_req) {
    set_has_mg2s_sync_req();
  } else {
    clear_has_mg2s_sync_req();
  }
}

// optional .GNET.MS2G_SYNC_RES ms2g_sync_res = 104;
inline bool MS2G::has_ms2g_sync_res() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MS2G::set_has_ms2g_sync_res() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MS2G::clear_has_ms2g_sync_res() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MS2G::clear_ms2g_sync_res() {
  if (ms2g_sync_res_ != NULL) ms2g_sync_res_->::GNET::MS2G_SYNC_RES::Clear();
  clear_has_ms2g_sync_res();
}
inline const ::GNET::MS2G_SYNC_RES& MS2G::ms2g_sync_res() const {
  return ms2g_sync_res_ != NULL ? *ms2g_sync_res_ : *default_instance_->ms2g_sync_res_;
}
inline ::GNET::MS2G_SYNC_RES* MS2G::mutable_ms2g_sync_res() {
  set_has_ms2g_sync_res();
  if (ms2g_sync_res_ == NULL) ms2g_sync_res_ = new ::GNET::MS2G_SYNC_RES;
  return ms2g_sync_res_;
}
inline ::GNET::MS2G_SYNC_RES* MS2G::release_ms2g_sync_res() {
  clear_has_ms2g_sync_res();
  ::GNET::MS2G_SYNC_RES* temp = ms2g_sync_res_;
  ms2g_sync_res_ = NULL;
  return temp;
}
inline void MS2G::set_allocated_ms2g_sync_res(::GNET::MS2G_SYNC_RES* ms2g_sync_res) {
  delete ms2g_sync_res_;
  ms2g_sync_res_ = ms2g_sync_res;
  if (ms2g_sync_res) {
    set_has_ms2g_sync_res();
  } else {
    clear_has_ms2g_sync_res();
  }
}

// optional .GNET.MS2G_FWD ms2g_fwd = 105;
inline bool MS2G::has_ms2g_fwd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MS2G::set_has_ms2g_fwd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MS2G::clear_has_ms2g_fwd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MS2G::clear_ms2g_fwd() {
  if (ms2g_fwd_ != NULL) ms2g_fwd_->::GNET::MS2G_FWD::Clear();
  clear_has_ms2g_fwd();
}
inline const ::GNET::MS2G_FWD& MS2G::ms2g_fwd() const {
  return ms2g_fwd_ != NULL ? *ms2g_fwd_ : *default_instance_->ms2g_fwd_;
}
inline ::GNET::MS2G_FWD* MS2G::mutable_ms2g_fwd() {
  set_has_ms2g_fwd();
  if (ms2g_fwd_ == NULL) ms2g_fwd_ = new ::GNET::MS2G_FWD;
  return ms2g_fwd_;
}
inline ::GNET::MS2G_FWD* MS2G::release_ms2g_fwd() {
  clear_has_ms2g_fwd();
  ::GNET::MS2G_FWD* temp = ms2g_fwd_;
  ms2g_fwd_ = NULL;
  return temp;
}
inline void MS2G::set_allocated_ms2g_fwd(::GNET::MS2G_FWD* ms2g_fwd) {
  delete ms2g_fwd_;
  ms2g_fwd_ = ms2g_fwd;
  if (ms2g_fwd) {
    set_has_ms2g_fwd();
  } else {
    clear_has_ms2g_fwd();
  }
}

// optional .GNET.MG2S_FWD mg2s_fwd = 106;
inline bool MS2G::has_mg2s_fwd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MS2G::set_has_mg2s_fwd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MS2G::clear_has_mg2s_fwd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MS2G::clear_mg2s_fwd() {
  if (mg2s_fwd_ != NULL) mg2s_fwd_->::GNET::MG2S_FWD::Clear();
  clear_has_mg2s_fwd();
}
inline const ::GNET::MG2S_FWD& MS2G::mg2s_fwd() const {
  return mg2s_fwd_ != NULL ? *mg2s_fwd_ : *default_instance_->mg2s_fwd_;
}
inline ::GNET::MG2S_FWD* MS2G::mutable_mg2s_fwd() {
  set_has_mg2s_fwd();
  if (mg2s_fwd_ == NULL) mg2s_fwd_ = new ::GNET::MG2S_FWD;
  return mg2s_fwd_;
}
inline ::GNET::MG2S_FWD* MS2G::release_mg2s_fwd() {
  clear_has_mg2s_fwd();
  ::GNET::MG2S_FWD* temp = mg2s_fwd_;
  mg2s_fwd_ = NULL;
  return temp;
}
inline void MS2G::set_allocated_mg2s_fwd(::GNET::MG2S_FWD* mg2s_fwd) {
  delete mg2s_fwd_;
  mg2s_fwd_ = mg2s_fwd;
  if (mg2s_fwd) {
    set_has_mg2s_fwd();
  } else {
    clear_has_mg2s_fwd();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GNET

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GNET::EN_CMD_S2G>() {
  return ::GNET::EN_CMD_S2G_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_s2g_2eproto__INCLUDED
